import os
import re
from abc import ABC, abstractmethod
from domain.models import ReportData


def slugify(text):
    """
    –ó–∞–º—ñ–Ω—é—î –≤—Å—ñ –Ω–µ–∞–ª—Ñ–∞–≤—ñ—Ç–Ω—ñ —Å–∏–º–≤–æ–ª–∏ –Ω–∞ –ø—ñ–¥–∫—Ä–µ—Å–ª–µ–Ω–Ω—è.
    –ù–∞–ø—Ä–∏–∫–ª–∞–¥: "Test Report: June" -> "test_report_june"
    """
    return re.sub(r'[^a-zA-Z0-9_]+', '_', text).strip('_')


class BaseExporter(ABC):
    """
    Template Method: —à–∞–±–ª–æ–Ω –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –∑–≤—ñ—Ç—É.
    """

    def __init__(self, output_dir: str):
        self.output_dir = output_dir
        os.makedirs(output_dir, exist_ok=True)

    def export(self, data: ReportData) -> str:
        """
        –®–∞–±–ª–æ–Ω–Ω–∏–π –º–µ—Ç–æ–¥ ‚Äî –Ω–µ –∑–º—ñ–Ω—é—î—Ç—å—Å—è –≤ –ø—ñ–¥–∫–ª–∞—Å–∞—Ö.
        """
        filename = self._generate_filename(data)
        full_path = os.path.join(self.output_dir, filename)
        self._render(data, full_path)
        return full_path

    @abstractmethod
    def _render(self, data: ReportData, path: str):
        """
        –ê–±—Å—Ç—Ä–∞–∫—Ç–Ω–∏–π –º–µ—Ç–æ–¥ –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥—É –∑–≤—ñ—Ç—É.
        """
        pass

    def _generate_filename(self, data: ReportData) -> str:
        name = slugify(data.title.lower())  # üëà –û–ù–û–í–õ–ï–ù–û
        return f"{name}.{self._get_extension()}"

    @abstractmethod
    def _get_extension(self) -> str:
        """
        –ü–æ–≤–µ—Ä—Ç–∞—î —Ä–æ–∑—à–∏—Ä–µ–Ω–Ω—è —Ñ–∞–π–ª—É (pdf, html, xlsx).
        """
        pass
